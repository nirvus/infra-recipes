[
  {
    "cmd": [],
    "name": "ensure_gitiles"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/gitiles",
      "-ensure-file",
      "infra/tools/luci/gitiles/linux-amd64 latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_gitiles.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/luci/gitiles/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_goma"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/goma",
      "-ensure-file",
      "infra_internal/goma/client/linux-amd64 release",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_goma.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra_internal/goma/client/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_gsutil"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/gsutil",
      "-ensure-file",
      "infra/tools/gsutil latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_gsutil.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/gsutil\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_jiri"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/jiri",
      "-ensure-file",
      "fuchsia/tools/jiri/linux-amd64 stable",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_jiri.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-stable----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/jiri/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/gitiles/gitiles",
      "refs",
      "-json-output",
      "/path/to/tmp/json",
      "https://fuchsia.googlesource.com/third_party/llvm",
      "refs"
    ],
    "name": "refs",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"refs/heads/master\": \"75b05681239cb309a23fcb4f8864f177e5aa62da\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd",
      "search",
      "fuchsia/lib/llvm",
      "-tag",
      "git_revision:75b05681239cb309a23fcb4f8864f177e5aa62da",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "cipd search fuchsia/lib/llvm git_revision:75b05681239cb309a23fcb4f8864f177e5aa62da",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": []@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_packages"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd",
      "-ensure-file",
      "fuchsia/clang/${platform} goma\ninfra/cmake/${platform} version:3.9.2\ninfra/ninja/${platform} version:1.8.2",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_packages.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-goma------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/clang/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-version:3.9.2---\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/cmake/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-version:1.8.2---\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/ninja/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/llvm_tmp_1/root"
    ],
    "infra_step": true,
    "name": "create pkg root dir"
  },
  {
    "cmd": [],
    "infra_step": true,
    "name": "ensure_jiri (2)"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/jiri",
      "-ensure-file",
      "fuchsia/tools/jiri/linux-amd64 stable",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_jiri.ensure_installed (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-stable----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/jiri/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "init",
      "-v",
      "-time",
      "-analytics-opt=false",
      "-rewrite-sso-to-https=true",
      "-cache",
      "[CACHE]/git",
      "-shared"
    ],
    "infra_step": true,
    "name": "jiri init"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "import",
      "-v",
      "-time",
      "-name",
      "garnet",
      "manifest/garnet",
      "https://fuchsia.googlesource.com/garnet"
    ],
    "infra_step": true,
    "name": "jiri import"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "update",
      "-v",
      "-time",
      "-autoupdate=false",
      "-attempts=3",
      "-run-hooks=false"
    ],
    "infra_step": true,
    "name": "jiri update",
    "timeout": 1200
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "run-hooks",
      "-v",
      "-time",
      "-attempts=3"
    ],
    "infra_step": true,
    "name": "jiri run-hooks"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "source-manifest",
      "-v",
      "-time",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "jiri source-manifest",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output[source manifest]@{@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@  \"directories\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@    \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@      \"git_checkout\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@        \"repo_url\": \"https://fuchsia.googlesource.com/manifest\", @@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@        \"revision\": \"4c2b0da3c06341db5cebe4d02c78c93c3b2bd78b\"@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@      }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@    }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@  }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@}@@@",
      "@@@STEP_LOG_END@json.output[source manifest]@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "snapshot",
      "-v",
      "-time",
      "[CLEANUP]/jiri.snapshot"
    ],
    "infra_step": true,
    "name": "jiri snapshot",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@snapshot_contents@<manifest>@@@",
      "@@@STEP_LOG_LINE@snapshot_contents@  <projects>@@@",
      "@@@STEP_LOG_LINE@snapshot_contents@    <project name=\"manifest\" path=\"manifest\" remote=\"https://fuchsia.googlesource.com/manifest\" revision=\"4c2b0da3c06341db5cebe4d02c78c93c3b2bd78b\"/>@@@",
      "@@@STEP_LOG_LINE@snapshot_contents@  </projects>@@@",
      "@@@STEP_LOG_LINE@snapshot_contents@</manifest>@@@",
      "@@@STEP_LOG_END@snapshot_contents@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[infra::hash]/resources/hashutil.py",
      "-a",
      "sha1",
      "[CLEANUP]/jiri.snapshot"
    ],
    "infra_step": true,
    "name": "hash snapshot",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[START_DIR]/llvm-project"
    ],
    "infra_step": true,
    "name": "makedirs"
  },
  {
    "cmd": [
      "git",
      "init"
    ],
    "cwd": "[START_DIR]/llvm-project",
    "infra_step": true,
    "name": "git init"
  },
  {
    "cmd": [
      "git",
      "remote",
      "add",
      "origin",
      "https://fuchsia.googlesource.com/third_party/llvm"
    ],
    "cwd": "[START_DIR]/llvm-project",
    "infra_step": true,
    "name": "git remote"
  },
  {
    "cmd": [
      "git",
      "fetch",
      "origin"
    ],
    "cwd": "[START_DIR]/llvm-project",
    "infra_step": true,
    "name": "git fetch"
  },
  {
    "cmd": [
      "git",
      "checkout",
      "-f",
      "75b05681239cb309a23fcb4f8864f177e5aa62da"
    ],
    "cwd": "[START_DIR]/llvm-project",
    "infra_step": true,
    "name": "git checkout"
  },
  {
    "cmd": [
      "git",
      "rev-parse",
      "HEAD"
    ],
    "cwd": "[START_DIR]/llvm-project",
    "infra_step": true,
    "name": "git rev-parse",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@SET_BUILD_PROPERTY@got_revision@\"deadbeef\"@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "clean",
      "-f",
      "-d",
      "-x"
    ],
    "cwd": "[START_DIR]/llvm-project",
    "infra_step": true,
    "name": "git clean"
  },
  {
    "cmd": [
      "git",
      "submodule",
      "sync"
    ],
    "cwd": "[START_DIR]/llvm-project",
    "infra_step": true,
    "name": "submodule sync"
  },
  {
    "cmd": [
      "git",
      "submodule",
      "update",
      "--init"
    ],
    "cwd": "[START_DIR]/llvm-project",
    "infra_step": true,
    "name": "submodule update"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/llvm_tmp_1/sdk"
    ],
    "infra_step": true,
    "name": "create sdk dir"
  },
  {
    "cmd": [],
    "name": "build"
  },
  {
    "cmd": [],
    "name": "build.ensure_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/goma",
      "-ensure-file",
      "infra_internal/goma/client/linux-amd64 release",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "build.ensure_goma.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra_internal/goma/client/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "restart"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "infra_step": true,
    "name": "build.start_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport multiprocessing\nimport sys\n\njob_limit = 200\nif sys.platform.startswith('linux'):\n  # Use 80 for linux not to load goma backend.\n  job_limit = 80\n\ntry:\n  jobs = min(job_limit, multiprocessing.cpu_count() * 10)\nexcept NotImplementedError:\n  jobs = 50\n\nprint jobs\n"
    ],
    "name": "build.calculate the number of recommended jobs",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import multiprocessing@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@job_limit = 200@@@",
      "@@@STEP_LOG_LINE@python.inline@if sys.platform.startswith('linux'):@@@",
      "@@@STEP_LOG_LINE@python.inline@  # Use 80 for linux not to load goma backend.@@@",
      "@@@STEP_LOG_LINE@python.inline@  job_limit = 80@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@try:@@@",
      "@@@STEP_LOG_LINE@python.inline@  jobs = min(job_limit, multiprocessing.cpu_count() * 10)@@@",
      "@@@STEP_LOG_LINE@python.inline@except NotImplementedError:@@@",
      "@@@STEP_LOG_LINE@python.inline@  jobs = 50@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@print jobs@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/scripts/build-zircon.sh",
      "-t",
      "arm64",
      "-j",
      "50",
      "GOMACC=[START_DIR]/cipd/goma/gomacc"
    ],
    "name": "build.zircon",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build.build fuchsia",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/gn",
      "gen",
      "[START_DIR]/out/release-arm64",
      "--check",
      "--args=target_cpu=\"arm64\" fuchsia_packages=[\"garnet/packages/sdk/garnet\"] use_goma=true goma_dir=\"[START_DIR]/cipd/goma\" is_debug=false"
    ],
    "name": "build.build fuchsia.gn gen",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/ninja",
      "-C",
      "[START_DIR]/out/release-arm64",
      "-j",
      "50"
    ],
    "name": "build.build fuchsia.ninja",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "jsonstatus",
      "[START_DIR]/cipd/goma/jsonstatus"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "build.goma_jsonstatus",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stat"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "build.goma_stat",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stop"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "build.stop_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/scripts/sdk/create_layout.py",
      "--manifest",
      "[START_DIR]/out/release-arm64/gen/garnet/public/sdk/garnet_molecule.sdk",
      "--output",
      "[TMP_BASE]/llvm_tmp_1/sdk"
    ],
    "name": "create arm64 sdk"
  },
  {
    "cmd": [],
    "name": "build (2)"
  },
  {
    "cmd": [],
    "name": "build.ensure_goma (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/goma",
      "-ensure-file",
      "infra_internal/goma/client/linux-amd64 release",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "build.ensure_goma.ensure_installed (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra_internal/goma/client/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "restart"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "infra_step": true,
    "name": "build.start_goma (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/scripts/build-zircon.sh",
      "-t",
      "x64",
      "-j",
      "50",
      "GOMACC=[START_DIR]/cipd/goma/gomacc"
    ],
    "name": "build.zircon (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build.build fuchsia (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/gn",
      "gen",
      "[START_DIR]/out/release-x64",
      "--check",
      "--args=target_cpu=\"x64\" fuchsia_packages=[\"garnet/packages/sdk/garnet\"] use_goma=true goma_dir=\"[START_DIR]/cipd/goma\" is_debug=false"
    ],
    "name": "build.build fuchsia.gn gen (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/ninja",
      "-C",
      "[START_DIR]/out/release-x64",
      "-j",
      "50"
    ],
    "name": "build.build fuchsia.ninja (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "jsonstatus",
      "[START_DIR]/cipd/goma/jsonstatus"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "build.goma_jsonstatus (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stat"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "build.goma_stat (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stop"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "build.stop_goma (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/scripts/sdk/create_layout.py",
      "--manifest",
      "[START_DIR]/out/release-x64/gen/garnet/public/sdk/garnet_molecule.sdk",
      "--output",
      "[TMP_BASE]/llvm_tmp_1/sdk",
      "--overlay"
    ],
    "name": "create x64 sdk"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "restart"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "infra_step": true,
    "name": "start_goma"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/llvm_tmp_1/llvm_arm64_build_dir"
    ],
    "infra_step": true,
    "name": "create arm64 llvm build dir"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/llvm_tmp_1/llvm_arm64_install_dir"
    ],
    "infra_step": true,
    "name": "create arm64 llvm install dir"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/bin/cmake",
      "-GNinja",
      "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
      "-DCMAKE_INSTALL_PREFIX=",
      "-DCMAKE_SYSTEM_NAME=Fuchsia",
      "-DCMAKE_C_COMPILER_LAUNCHER=[START_DIR]/cipd/goma/gomacc",
      "-DCMAKE_CXX_COMPILER_LAUNCHER=[START_DIR]/cipd/goma/gomacc",
      "-DCMAKE_ASM_COMPILER_LAUNCHER=[START_DIR]/cipd/goma/gomacc",
      "-DCMAKE_C_COMPILER=[START_DIR]/cipd/bin/clang",
      "-DCMAKE_C_COMPILER_TARGET=aarch64-fuchsia",
      "-DCMAKE_CXX_COMPILER=[START_DIR]/cipd/bin/clang++",
      "-DCMAKE_CXX_COMPILER_TARGET=aarch64-fuchsia",
      "-DCMAKE_ASM_COMPILER=[START_DIR]/cipd/bin/clang",
      "-DCMAKE_ASM_COMPILER_TARGET=aarch64-fuchsia",
      "-DCMAKE_MAKE_PROGRAM=[START_DIR]/cipd/ninja",
      "-DCMAKE_AR=[START_DIR]/cipd/bin/llvm-arg",
      "-DCMAKE_LINKER=[START_DIR]/cipd/bin/ld.lld",
      "-DCMAKE_NM=[START_DIR]/cipd/bin/llvm-nm",
      "-DCMAKE_OBJCOPY=[START_DIR]/cipd/bin/llvm-objcopy",
      "-DCMAKE_OBJDUMP=[START_DIR]/cipd/bin/llvm-objdump",
      "-DCMAKE_RANLIB=[START_DIR]/cipd/bin/llvm-ranlib",
      "-DCMAKE_STRIP=[START_DIR]/cipd/bin/llvm-strip",
      "-DCMAKE_SYSROOT=[TMP_BASE]/llvm_tmp_1/sdk/arch/arm64/sysroot",
      "-DLLVM_HOST_TRIPLE=aarch64-fuchsia",
      "-DLLVM_TARGETS_TO_BUILD=X86\\;ARM\\;AArch64",
      "-DLLVM_DISTRIBUTION_COMPONENTS=llvm-headers\\;LLVM",
      "-DLLVM_BUILD_LLVM_DYLIB=ON",
      "-DLLVM_ENABLE_LLD=ON",
      "-DLLVM_EXTERNALIZE_DEBUGINFO=ON",
      "[START_DIR]/llvm-project/llvm"
    ],
    "cwd": "[TMP_BASE]/llvm_tmp_1/llvm_arm64_build_dir",
    "name": "configure arm64 llvm"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/ninja",
      "distribution",
      "-j50"
    ],
    "cwd": "[TMP_BASE]/llvm_tmp_1/llvm_arm64_build_dir",
    "name": "build arm64 llvm"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/ninja",
      "install-distribution"
    ],
    "cwd": "[TMP_BASE]/llvm_tmp_1/llvm_arm64_build_dir",
    "env": {
      "DESTDIR": "[TMP_BASE]/llvm_tmp_1/llvm_arm64_install_dir"
    },
    "name": "install arm64 llvm"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copytree",
      "[TMP_BASE]/llvm_tmp_1/llvm_arm64_install_dir/lib",
      "[TMP_BASE]/llvm_tmp_1/root/arch/arm64/lib"
    ],
    "infra_step": true,
    "name": "copy arm64 libs"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/llvm_tmp_1/llvm_x64_build_dir"
    ],
    "infra_step": true,
    "name": "create x64 llvm build dir"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/llvm_tmp_1/llvm_x64_install_dir"
    ],
    "infra_step": true,
    "name": "create x64 llvm install dir"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/bin/cmake",
      "-GNinja",
      "-DCMAKE_BUILD_TYPE=RelWithDebInfo",
      "-DCMAKE_INSTALL_PREFIX=",
      "-DCMAKE_SYSTEM_NAME=Fuchsia",
      "-DCMAKE_C_COMPILER_LAUNCHER=[START_DIR]/cipd/goma/gomacc",
      "-DCMAKE_CXX_COMPILER_LAUNCHER=[START_DIR]/cipd/goma/gomacc",
      "-DCMAKE_ASM_COMPILER_LAUNCHER=[START_DIR]/cipd/goma/gomacc",
      "-DCMAKE_C_COMPILER=[START_DIR]/cipd/bin/clang",
      "-DCMAKE_C_COMPILER_TARGET=x64-fuchsia",
      "-DCMAKE_CXX_COMPILER=[START_DIR]/cipd/bin/clang++",
      "-DCMAKE_CXX_COMPILER_TARGET=x64-fuchsia",
      "-DCMAKE_ASM_COMPILER=[START_DIR]/cipd/bin/clang",
      "-DCMAKE_ASM_COMPILER_TARGET=x64-fuchsia",
      "-DCMAKE_MAKE_PROGRAM=[START_DIR]/cipd/ninja",
      "-DCMAKE_AR=[START_DIR]/cipd/bin/llvm-arg",
      "-DCMAKE_LINKER=[START_DIR]/cipd/bin/ld.lld",
      "-DCMAKE_NM=[START_DIR]/cipd/bin/llvm-nm",
      "-DCMAKE_OBJCOPY=[START_DIR]/cipd/bin/llvm-objcopy",
      "-DCMAKE_OBJDUMP=[START_DIR]/cipd/bin/llvm-objdump",
      "-DCMAKE_RANLIB=[START_DIR]/cipd/bin/llvm-ranlib",
      "-DCMAKE_STRIP=[START_DIR]/cipd/bin/llvm-strip",
      "-DCMAKE_SYSROOT=[TMP_BASE]/llvm_tmp_1/sdk/arch/x64/sysroot",
      "-DLLVM_HOST_TRIPLE=x64-fuchsia",
      "-DLLVM_TARGETS_TO_BUILD=X86\\;ARM\\;AArch64",
      "-DLLVM_DISTRIBUTION_COMPONENTS=llvm-headers\\;LLVM",
      "-DLLVM_BUILD_LLVM_DYLIB=ON",
      "-DLLVM_ENABLE_LLD=ON",
      "-DLLVM_EXTERNALIZE_DEBUGINFO=ON",
      "[START_DIR]/llvm-project/llvm"
    ],
    "cwd": "[TMP_BASE]/llvm_tmp_1/llvm_x64_build_dir",
    "name": "configure x64 llvm"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/ninja",
      "distribution",
      "-j50"
    ],
    "cwd": "[TMP_BASE]/llvm_tmp_1/llvm_x64_build_dir",
    "name": "build x64 llvm"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/ninja",
      "install-distribution"
    ],
    "cwd": "[TMP_BASE]/llvm_tmp_1/llvm_x64_build_dir",
    "env": {
      "DESTDIR": "[TMP_BASE]/llvm_tmp_1/llvm_x64_install_dir"
    },
    "name": "install x64 llvm"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copytree",
      "[TMP_BASE]/llvm_tmp_1/llvm_x64_install_dir/lib",
      "[TMP_BASE]/llvm_tmp_1/root/arch/x64/lib"
    ],
    "infra_step": true,
    "name": "copy x64 libs"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE[infra::llvm].resources/merge_headers.py",
      "--out",
      "[TMP_BASE]/llvm_tmp_1/root/pkg/llvm/include",
      "--def1",
      "__aarch64__",
      "--def2",
      "__x86_64__",
      "[TMP_BASE]/llvm_tmp_1/llvm_arm64_install_dir/include",
      "[TMP_BASE]/llvm_tmp_1/llvm_x64_install_dir/include"
    ],
    "name": "merge headers"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "jsonstatus",
      "[START_DIR]/cipd/goma/jsonstatus"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "goma_jsonstatus"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stat"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "goma_stat"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stop"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_FAIL_FOR_UNSUPPORTED_COMPILER_FLAGS": "false"
    },
    "name": "stop_goma"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[TMP_BASE]/llvm_tmp_1/root/arch/x64/include/llvm/Config/llvm-config.h",
      "/path/to/tmp/"
    ],
    "infra_step": true,
    "name": "llvm-config.h"
  },
  {
    "cmd": [
      "cipd",
      "pkg-build",
      "-pkg-def",
      "{\"data\": [{\"dir\": \".\", \"exclude\": []}, {\"version_file\": \".versions/llvm.cipd_version\"}], \"install_mode\": \"copy\", \"package\": \"fuchsia/lib/llvm\", \"root\": \"[TMP_BASE]/llvm_tmp_1/root\"}",
      "-out",
      "[CLEANUP]/llvm.cipd",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "build fuchsia/lib/llvm",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"instance_id\": \"40-chars-fake-of-the-package-instance_id\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"package\": \"fuchsia/lib/llvm\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd",
      "pkg-register",
      "[CLEANUP]/llvm.cipd",
      "-json-output",
      "/path/to/tmp/json",
      "-ref",
      "latest",
      "-tag",
      "git_repository:https://fuchsia.googlesource.com/third_party/llvm",
      "-tag",
      "git_revision:75b05681239cb309a23fcb4f8864f177e5aa62da",
      "-tag",
      "version:7.0.0"
    ],
    "name": "register fuchsia/lib/llvm",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"instance_id\": \"40-chars-fake-of-the-package-instance_id\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"package\": \"fuchsia/lib/llvm\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython",
      "-vpython-spec",
      "RECIPE_MODULE[infra::gsutil]/resources/gsutil.vpython",
      "-u",
      "[START_DIR]/cipd/gsutil/gsutil",
      "-o",
      "GSUtil:software_update_check_period=0",
      "cp",
      "[CLEANUP]/llvm.cipd",
      "gs://fuchsia/lib/llvm/40-chars-fake-of-the-package-instance_id"
    ],
    "infra_step": true,
    "name": "gsutil cp",
    "~followup_annotations": [
      "@@@STEP_LINK@gsutil.upload@https://storage.googleapis.com/fuchsia/lib/llvm/40-chars-fake-of-the-package-instance_id@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]