[
  {
    "cmd": [],
    "name": "ensure_gitiles"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/gitiles",
      "-ensure-file",
      "infra/tools/luci/gitiles/mac-amd64 latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_gitiles.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/luci/gitiles/mac-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_gsutil"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/gsutil",
      "-ensure-file",
      "infra/tools/gsutil latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_gsutil.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/gsutil\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/gitiles/gitiles",
      "refs",
      "-json-output",
      "/path/to/tmp/json",
      "https://fuchsia.googlesource.com/third_party/swift",
      "refs"
    ],
    "name": "refs",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"refs/heads/upstream/fuchsia_release\": \"85bce8d910db00261b4844f784dca1a8e322b7e0\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_packages"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd",
      "-ensure-file",
      "fuchsia/clang/${platform} goma\ninfra/cmake/${platform} version:3.9.2\ninfra/ninja/${platform} version:1.8.2",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_packages.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-goma------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/clang/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-version:3.9.2---\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/cmake/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-version:1.8.2---\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/ninja/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "infra_step": true,
    "name": "ensure_jiri"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/jiri",
      "-ensure-file",
      "fuchsia/tools/jiri/mac-amd64 stable",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_jiri.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-stable----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/jiri/mac-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "init",
      "-v",
      "-time",
      "-analytics-opt=false",
      "-rewrite-sso-to-https=true",
      "-cache",
      "[CACHE]/git",
      "-shared"
    ],
    "infra_step": true,
    "name": "jiri init"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "import",
      "-v",
      "-time",
      "manifest/garnet",
      "https://fuchsia.googlesource.com/garnet"
    ],
    "infra_step": true,
    "name": "jiri import"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "update",
      "-v",
      "-time",
      "-autoupdate=false",
      "-attempts=3",
      "-run-hooks=false"
    ],
    "infra_step": true,
    "name": "jiri update",
    "timeout": 1200
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "run-hooks",
      "-v",
      "-time",
      "-attempts=3"
    ],
    "infra_step": true,
    "name": "jiri run-hooks"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "source-manifest",
      "-v",
      "-time",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "jiri source-manifest",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output[source manifest]@{@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@  \"directories\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@    \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@      \"git_checkout\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@        \"repo_url\": \"https://fuchsia.googlesource.com/manifest\", @@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@        \"revision\": \"4c2b0da3c06341db5cebe4d02c78c93c3b2bd78b\"@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@      }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@    }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@  }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@}@@@",
      "@@@STEP_LOG_END@json.output[source manifest]@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "snapshot",
      "-v",
      "-time",
      "[CLEANUP]/jiri.snapshot"
    ],
    "infra_step": true,
    "name": "jiri snapshot"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[infra::hash]/resources/hashutil.py",
      "-a",
      "sha1",
      "[CLEANUP]/jiri.snapshot"
    ],
    "infra_step": true,
    "name": "hash snapshot",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[START_DIR]/swift-source"
    ],
    "infra_step": true,
    "name": "swift-source"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[START_DIR]/swift-source/swift"
    ],
    "infra_step": true,
    "name": "makedirs"
  },
  {
    "cmd": [
      "git",
      "init"
    ],
    "cwd": "[START_DIR]/swift-source/swift",
    "infra_step": true,
    "name": "git init"
  },
  {
    "cmd": [
      "git",
      "remote",
      "add",
      "origin",
      "https://fuchsia.googlesource.com/third_party/swift"
    ],
    "cwd": "[START_DIR]/swift-source/swift",
    "infra_step": true,
    "name": "git remote"
  },
  {
    "cmd": [
      "git",
      "fetch",
      "origin"
    ],
    "cwd": "[START_DIR]/swift-source/swift",
    "infra_step": true,
    "name": "git fetch"
  },
  {
    "cmd": [
      "git",
      "checkout",
      "-f",
      "85bce8d910db00261b4844f784dca1a8e322b7e0"
    ],
    "cwd": "[START_DIR]/swift-source/swift",
    "infra_step": true,
    "name": "git checkout"
  },
  {
    "cmd": [
      "git",
      "rev-parse",
      "HEAD"
    ],
    "cwd": "[START_DIR]/swift-source/swift",
    "infra_step": true,
    "name": "git rev-parse",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@SET_BUILD_PROPERTY@got_revision@\"deadbeef\"@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "clean",
      "-f",
      "-d",
      "-x"
    ],
    "cwd": "[START_DIR]/swift-source/swift",
    "infra_step": true,
    "name": "git clean"
  },
  {
    "cmd": [
      "git",
      "submodule",
      "sync"
    ],
    "cwd": "[START_DIR]/swift-source/swift",
    "infra_step": true,
    "name": "submodule sync"
  },
  {
    "cmd": [
      "git",
      "submodule",
      "update",
      "--init"
    ],
    "cwd": "[START_DIR]/swift-source/swift",
    "infra_step": true,
    "name": "submodule update"
  },
  {
    "cmd": [],
    "name": "build"
  },
  {
    "cmd": [],
    "name": "build.ensure_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/goma",
      "-ensure-file",
      "infra_internal/goma/client/mac-amd64 release",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "build.ensure_goma.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra_internal/goma/client/mac-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "restart"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "infra_step": true,
    "name": "build.start_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport multiprocessing\nimport sys\n\njob_limit = 200\nif sys.platform.startswith('linux'):\n  # Use 80 for linux not to load goma backend.\n  job_limit = 80\n\ntry:\n  jobs = min(job_limit, multiprocessing.cpu_count() * 10)\nexcept NotImplementedError:\n  jobs = 50\n\nprint jobs\n"
    ],
    "name": "build.calculate the number of recommended jobs",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import multiprocessing@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@job_limit = 200@@@",
      "@@@STEP_LOG_LINE@python.inline@if sys.platform.startswith('linux'):@@@",
      "@@@STEP_LOG_LINE@python.inline@  # Use 80 for linux not to load goma backend.@@@",
      "@@@STEP_LOG_LINE@python.inline@  job_limit = 80@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@try:@@@",
      "@@@STEP_LOG_LINE@python.inline@  jobs = min(job_limit, multiprocessing.cpu_count() * 10)@@@",
      "@@@STEP_LOG_LINE@python.inline@except NotImplementedError:@@@",
      "@@@STEP_LOG_LINE@python.inline@  jobs = 50@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@print jobs@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/scripts/build-zircon.sh",
      "-t",
      "arm64",
      "-j",
      "50",
      "GOMACC=[START_DIR]/cipd/goma/gomacc"
    ],
    "name": "build.zircon",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build.build fuchsia",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/gn",
      "gen",
      "[START_DIR]/out/release-arm64",
      "--check",
      "--args=target_cpu=\"arm64\" fuchsia_packages=[\"garnet/packages/default\"] use_goma=true goma_dir=\"[START_DIR]/cipd/goma\" is_debug=false"
    ],
    "name": "build.build fuchsia.gn gen",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/ninja",
      "-C",
      "[START_DIR]/out/release-arm64",
      "-j",
      "50"
    ],
    "name": "build.build fuchsia.ninja",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "jsonstatus",
      "[START_DIR]/cipd/goma/jsonstatus"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.goma_jsonstatus",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stat"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.goma_stat",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stop"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.stop_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build (2)"
  },
  {
    "cmd": [],
    "name": "build.ensure_goma (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/goma",
      "-ensure-file",
      "infra_internal/goma/client/mac-amd64 release",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "build.ensure_goma.ensure_installed (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra_internal/goma/client/mac-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "restart"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "infra_step": true,
    "name": "build.start_goma (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/scripts/build-zircon.sh",
      "-t",
      "x64",
      "-j",
      "50",
      "GOMACC=[START_DIR]/cipd/goma/gomacc"
    ],
    "name": "build.zircon (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build.build fuchsia (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/gn",
      "gen",
      "[START_DIR]/out/release-x64",
      "--check",
      "--args=target_cpu=\"x64\" fuchsia_packages=[\"garnet/packages/default\"] use_goma=true goma_dir=\"[START_DIR]/cipd/goma\" is_debug=false"
    ],
    "name": "build.build fuchsia.gn gen (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/ninja",
      "-C",
      "[START_DIR]/out/release-x64",
      "-j",
      "50"
    ],
    "name": "build.build fuchsia.ninja (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "jsonstatus",
      "[START_DIR]/cipd/goma/jsonstatus"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.goma_jsonstatus (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stat"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.goma_stat (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stop"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.stop_goma (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/swift_tmp_1/build"
    ],
    "infra_step": true,
    "name": "build (3)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "\n{\n    \"https-clone-pattern\": \"https://fuchsia.googlesource.com/third_party/%s\",\n    \"ssh-clone-pattern\": \"git@github.com:google/%s.git\",\n    \"repos\": {\n        \"compiler-rt\": {\n            \"remote\": {\n                \"id\": \"swift-compiler-rt\"\n            }\n        },\n        \"llvm\": {\n            \"remote\": {\n                \"id\": \"swift-llvm\"\n            }\n        },\n        \"swift-corelibs-foundation\": {\n            \"remote\": {\n                \"id\": \"swift-corelibs-foundation\"\n            }\n        },\n        \"clang\": {\n            \"remote\": {\n                \"id\": \"swift-clang\"\n            }\n        },\n        \"llbuild\": {\n            \"remote\": {\n                \"id\": \"swift-llbuild\"\n            }\n        },\n        \"cmark\": {\n            \"remote\": {\n                \"id\": \"swift-cmark\"\n            }\n        },\n        \"lldb\": {\n            \"remote\": {\n                \"id\": \"swift-lldb\"\n            }\n        },\n        \"swift-corelibs-xctest\": {\n            \"remote\": {\n                \"id\": \"swift-corelibs-xctest\"\n            }\n        },\n        \"ninja\": {\n            \"remote\": {\n                \"id\": \"ninja\"\n            }\n        },\n        \"swift-integration-tests\": {\n            \"remote\": {\n                \"id\": \"swift-integration-tests\"\n            }\n        },\n        \"swiftpm\": {\n            \"remote\": {\n                \"id\": \"swift-package-manager\"\n            }\n        },\n        \"swift\": {\n            \"remote\": {\n                \"id\": \"swift\"\n            }\n        },\n        \"swift-corelibs-libdispatch\": {\n            \"remote\": {\n                \"id\": \"swift-corelibs-libdispatch\"\n            }\n        }\n    },\n    \"branch-schemes\": {\n        \"fuchsia\": {\n            \"repos\": {\n                \"compiler-rt\": \"dfe85d634bd270b34252c97fd97bd14f6baa0a2f\",\n                \"llvm\": \"8eb8559f587b807e9ad83f5fcb117cd4b5d72888\",\n                \"swift-corelibs-foundation\": \"2022d3e4407ed58103190c04f9426843ffb59efb\",\n                \"clang\": \"9b5b1dc91898a1e33885396cde2b6b5b52c64b25\",\n                \"llbuild\": \"57a3aaaf9a76048e9bfc22b927f27ac95a6ba510\",\n                \"cmark\": \"d875488a6a95d5487b7c675f79a8dafef210a65f\",\n                \"lldb\": \"4d8af682b97eeadc6f6000243ff0d50c84487364\",\n                \"swiftpm\": \"58a1d0b42d829dbc9034eed673f0f2c01f519463\",\n                \"swift-corelibs-xctest\": \"01e6126d1cd1c5a81e7a1695487c09d57261577c\",\n                \"ninja\": \"253e94c1fa511704baeb61cf69995bbf09ba435e\",\n                \"swift-integration-tests\": \"01eecd5a83279635823e78101a538132784bc628\",\n                \"swift\": \"a4d6bbf5ba33bf0b55b33157e89d1336729a1f55\",\n                \"swift-corelibs-libdispatch\": \"f151b33ec3c0b4df89fc190d1db45c5908e0961d\"\n            },\n            \"aliases\": [\n                \"fuchsia\"\n            ]\n        }\n    }\n}\n",
      "[TMP_BASE]/swift_tmp_1/build/update-checkout.json"
    ],
    "cwd": "[TMP_BASE]/swift_tmp_1/build",
    "env_prefixes": {
      "PATH": [
        "[START_DIR]/cipd",
        "[START_DIR]/cipd/bin"
      ]
    },
    "infra_step": true,
    "name": "writing checkout config"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/swift-source/swift/utils/update-checkout",
      "--skip-repository",
      "swift",
      "--skip-repository",
      "swift-xcode-playground-support",
      "--config",
      "[TMP_BASE]/swift_tmp_1/build/update-checkout.json",
      "--scheme",
      "fuchsia",
      "-j5",
      "--clone"
    ],
    "cwd": "[TMP_BASE]/swift_tmp_1/build",
    "env_prefixes": {
      "PATH": [
        "[START_DIR]/cipd",
        "[START_DIR]/cipd/bin"
      ]
    },
    "name": "checkout swift depedencies"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "\n#===------------------------------------------------------------------------===#\n# Fuchsia Mixins\n#===------------------------------------------------------------------------===#\n[preset: mixin_fuchsia_build]\nfuchsia\nextra-stdlib-deployment-targets=fuchsia-aarch64,fuchsia-x86_64\nfuchsia-toolchain-path=%(clang_path)s\nfuchsia-icu-uc-include=%(fuchsia_icu_uc)s\nfuchsia-icu-i18n-include=%(fuchsia_icu_i18n)s\nfuchsia-x86_64-sysroot=%(x86_64_sysroot)s\nfuchsia-aarch64-sysroot=%(aarch64_sysroot)s\nfuchsia-x86_64-libs=%(x64_shared)s\nfuchsia-aarch64-libs=%(arm64_shared)s\nhost-cc=%(clang_path)s/bin/clang\nhost-cxx=%(clang_path)s/bin/clang++\nuse-lld-linker\nbuild-swift-static-stdlib=true\nbuild-runtime-with-host-compiler=true\nbuild-swift-static-sdk-overlay=true\nextra-cmake-options=%(extra_cmake_args)s\n\nxctest=false\nfoundation=false\nlibdispatch=false\nlibicu=false\nbuild-ninja=false\n\ndash-dash\n\nskip-build-foundation\nskip-build-libdispatch\nskip-build-xctest\nskip-build-swiftpm\nskip-build-lldb\nskip-build-llbuild\n\n[preset: mixin_fuchsia_release_Os]\nmixin-preset=mixin_fuchsia_build\n\nno-swift-stdlib-assertions\nno-swift-assertions\nno-llvm-assertions\nrelease\n\ndash-dash\n\nswift-stdlib-build-type=MinSizeRel\nswift-stdlib-enable-assertions=false\nswift-enable-ast-verifier=0\n\n[preset: mixin_fuchsia_release_debuginfo]\nmixin-preset=mixin_fuchsia_build\n\nno-swift-stdlib-assertions\nrelease-debuginfo\nassertions\n\ndash-dash\n\nswift-stdlib-build-type=RelWithDebInfo\nswift-stdlib-enable-assertions=false\nswift-enable-ast-verifier=0\n\n\n# We will re-enable these when tests work\n[preset: mixin_fuchsia_disable_testing]\n\ndash-dash\n\nskip-test-cmark\nskip-test-lldb\nskip-test-swift\nskip-test-llbuild\nskip-test-swiftpm\nskip-test-xctest\nskip-test-foundation\nskip-test-libdispatch\nskip-test-playgroundlogger\nskip-test-playgroundsupport\nskip-test-libicu\nskip-test-fuchsia-host\n\n[preset: mixin_fuchsia_install]\n\ndash-dash\n\nswift-install-components=autolink-driver;compiler;clang-builtin-headers;stdlib;swift-remote-mirror;sdk-overlay;license;editor-integration;tools;dev\ninstall-swift\ninstall-prefix=/\ninstall-destdir=%(install_destdir)s\ninstall-symroot=%(install_symroot)s\nreconfigure\n\n#===------------------------------------------------------------------------===#\n# Fuchsia Targets\n#===------------------------------------------------------------------------===#\n[preset: fuchsia_release]\nmixin-preset=\n  mixin_fuchsia_release_Os\n  mixin_fuchsia_disable_testing\n\n[preset: fuchsia_release_debuginfo]\nmixin-preset=\n  mixin_fuchsia_release_debuginfo\n  mixin_fuchsia_disable_testing\n\n[preset: fuchsia_release_install]\nmixin-preset=\n  fuchsia_release\n  mixin_fuchsia_install\n\n[preset: fuchsia_release_debuginfo_install]\nmixin-preset=\n  fuchsia_release_debuginfo\n  mixin_fuchsia_install\n\n\n#===------------------------------------------------------------------------===#\n# Linux Extra Targets\n#===------------------------------------------------------------------------===#\n# We build this after doing a regular build to get the additional depedencies\n# for just Linux that don't work on Fuchsia yet.\n\n[preset: linux_extras_install]\nno-swift-stdlib-assertions\nno-swift-assertions\nno-llvm-assertions\nhost-cc=%(clang_path)s/bin/clang\nhost-cxx=%(clang_path)s/bin/clang++\nuse-lld-linker\nbuild-swift-static-stdlib=true\nbuild-runtime-with-host-compiler=true\nbuild-swift-static-sdk-overlay=true\nllbuild\nswiftpm\nxctest\nfoundation\nlibdispatch\nrelease\n\ndash-dash\n\nbuild-ninja\ninstall-swift\ninstall-lldb\ninstall-llbuild\ninstall-swiftpm\ninstall-xctest\ninstall-foundation\ninstall-libdispatch\n\nswift-stdlib-build-type=MinSizeRel\nswift-stdlib-enable-assertions=false\nswift-enable-ast-verifier=0\n\nskip-test-xctest\nskip-test-foundation\nskip-test-libdispatch\nskip-test-playgroundlogger\nskip-test-playgroundsupport\nskip-test-libicu\n\nswift-install-components=autolink-driver;compiler;clang-builtin-headers;stdlib;swift-remote-mirror;sdk-overlay;license;editor-integration;tools;dev;sourcekit-inproc;swift-remote-mirror-headers\nllvm-install-components=libclang;libclang-headers\ninstall-prefix=/\ninstall-destdir=%(install_destdir)s\ninstall-symroot=%(install_symroot)s\nreconfigure\n\n",
      "[TMP_BASE]/swift_tmp_1/build/presets.ini"
    ],
    "cwd": "[TMP_BASE]/swift_tmp_1/build",
    "env_prefixes": {
      "PATH": [
        "[START_DIR]/cipd",
        "[START_DIR]/cipd/bin"
      ]
    },
    "infra_step": true,
    "name": "writing build presets"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/swift-source/swift/utils/build-script",
      "--preset-file",
      "[TMP_BASE]/swift_tmp_1/build/presets.ini",
      "--jobs",
      "2",
      "clang_path=[START_DIR]/cipd",
      "fuchsia_icu_uc=[START_DIR]/third_party/icu/source/common",
      "fuchsia_icu_i18n=[START_DIR]/third_party/icu/source/i18n",
      "install_destdir=[TMP_BASE]/swift_tmp_1/build/swift_toolchain",
      "install_symroot=[TMP_BASE]/swift_tmp_1/build/swift_symbols",
      "extra_cmake_args=",
      "aarch64_sysroot=[START_DIR]/out/build-zircon/build-arm64/sysroot",
      "x86_64_sysroot=[START_DIR]/out/build-zircon/build-x64/sysroot",
      "arm64_shared=[START_DIR]/out/release-arm64/arm64-shared",
      "x64_shared=[START_DIR]/out/release-x64/x64-shared",
      "--preset=fuchsia_release_install"
    ],
    "cwd": "[TMP_BASE]/swift_tmp_1/build",
    "env_prefixes": {
      "PATH": [
        "[START_DIR]/cipd",
        "[START_DIR]/cipd/bin"
      ]
    },
    "name": "build swift fuchsia components"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "lib/libswiftCore.so=swift/fuchsia/aarch64/libswiftCore.so\nlib/libswiftGlibc.so=swift/fuchsia/aarch64/libswiftGlibc.so\nlib/libswiftSwiftOnoneSupport.so=swift/fuchsia/aarch64/libswiftSwiftOnoneSupport.so\nlib/libswiftRemoteMirror.so=swift/fuchsia/aarch64/libswiftRemoteMirror.so\nlib/libicui18n.so=swift/fuchsia/aarch64/libicui18n.so\nlib/libicuuc.so=swift/fuchsia/aarch64/libicuuc.so\n",
      "[TMP_BASE]/swift_tmp_1/build/swift_toolchain/lib/aarch64-fuchsia.manifest"
    ],
    "infra_step": true,
    "name": "writing aarch64 manifest"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[START_DIR]/out/release-arm64/arm64-shared/libicui18n.so",
      "[TMP_BASE]/swift_tmp_1/build/swift_toolchain/lib/swift/fuchsia/aarch64/libicui18n.so"
    ],
    "infra_step": true,
    "name": "copy libicui18n.so from garnet into toolchain arm64"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[START_DIR]/out/release-arm64/arm64-shared/libicuuc.so",
      "[TMP_BASE]/swift_tmp_1/build/swift_toolchain/lib/swift/fuchsia/aarch64/libicuuc.so"
    ],
    "infra_step": true,
    "name": "copy libicuuc.so from garnet into toolchain arm64"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "lib/libswiftCore.so=swift/fuchsia/x86_64/libswiftCore.so\nlib/libswiftGlibc.so=swift/fuchsia/x86_64/libswiftGlibc.so\nlib/libswiftSwiftOnoneSupport.so=swift/fuchsia/x86_64/libswiftSwiftOnoneSupport.so\nlib/libswiftRemoteMirror.so=swift/fuchsia/x86_64/libswiftRemoteMirror.so\nlib/libicui18n.so=swift/fuchsia/x86_64/libicui18n.so\nlib/libicuuc.so=swift/fuchsia/x86_64/libicuuc.so\n",
      "[TMP_BASE]/swift_tmp_1/build/swift_toolchain/lib/x86_64-fuchsia.manifest"
    ],
    "infra_step": true,
    "name": "writing x86_64 manifest"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[START_DIR]/out/release-x64/x64-shared/libicui18n.so",
      "[TMP_BASE]/swift_tmp_1/build/swift_toolchain/lib/swift/fuchsia/x86_64/libicui18n.so"
    ],
    "infra_step": true,
    "name": "copy libicui18n.so from garnet into toolchain x64"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[START_DIR]/out/release-x64/x64-shared/libicuuc.so",
      "[TMP_BASE]/swift_tmp_1/build/swift_toolchain/lib/swift/fuchsia/x86_64/libicuuc.so"
    ],
    "infra_step": true,
    "name": "copy libicuuc.so from garnet into toolchain x64"
  },
  {
    "cmd": [
      "[TMP_BASE]/swift_tmp_1/build/swift_toolchain/bin/swift",
      "--version"
    ],
    "name": "swift version",
    "stdout": "/path/to/tmp/"
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]