[
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[START_DIR]/tools"
    ],
    "infra_step": true,
    "name": "makedirs"
  },
  {
    "cmd": [
      "git",
      "init"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "git init"
  },
  {
    "cmd": [
      "git",
      "remote",
      "add",
      "origin",
      "https://fuchsia.googlesource.com/tools"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "git remote"
  },
  {
    "cmd": [
      "git",
      "fetch",
      "origin",
      "HEAD"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "git fetch"
  },
  {
    "cmd": [
      "git",
      "checkout",
      "-f",
      "FETCH_HEAD"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "git checkout"
  },
  {
    "cmd": [
      "git",
      "rev-parse",
      "HEAD"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "git rev-parse",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@SET_BUILD_PROPERTY@got_revision@\"deadbeef\"@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "clean",
      "-f",
      "-d",
      "-x"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "git clean"
  },
  {
    "cmd": [
      "git",
      "submodule",
      "sync"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "submodule sync"
  },
  {
    "cmd": [
      "git",
      "submodule",
      "update",
      "--init"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "submodule update"
  },
  {
    "cmd": [],
    "name": "ensure_packages"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd",
      "-ensure-file",
      "fuchsia/clang/${platform} goma",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_packages.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-goma------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/clang/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/bin/clang-format",
      "-i",
      "[START_DIR]/path/to/file",
      "[START_DIR]/other/path/to/file"
    ],
    "name": "clang-format"
  },
  {
    "cmd": [
      "git",
      "diff",
      "--name-only"
    ],
    "cwd": "[START_DIR]/tools",
    "name": "check file formatting",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [],
    "name": "write results",
    "~followup_annotations": [
      "@@@SET_BUILD_PROPERTY@tricium@{\"comments\": [{\"category\": \"ClangFormat/Unformatted\", \"end_char\": 0, \"end_line\": 0, \"message\": \"File not formatted properly.\\nRun the following to format:\\n\\nclang-format -i path/to/file\", \"path\": \"path/to/file\", \"start_char\": 0, \"start_line\": 0, \"suggestion\": [], \"url\": \"\"}, {\"category\": \"ClangFormat/Unformatted\", \"end_char\": 0, \"end_line\": 0, \"message\": \"File not formatted properly.\\nRun the following to format:\\n\\nclang-format -i other/path/to/file\", \"path\": \"other/path/to/file\", \"start_char\": 0, \"start_line\": 0, \"suggestion\": [], \"url\": \"\"}]}@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]