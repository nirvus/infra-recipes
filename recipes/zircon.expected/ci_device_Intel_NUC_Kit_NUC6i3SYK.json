[
  {
    "cmd": [],
    "name": "ensure_goma"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[CACHE]/goma/client",
      "-ensure-file",
      "infra_internal/goma/client/${platform} release",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_goma.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra_internal/goma/client/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_jiri"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/jiri",
      "-ensure-file",
      "fuchsia/tools/jiri/linux-amd64 stable",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_jiri.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-stable----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/jiri/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "init",
      "-v",
      "-time",
      "-analytics-opt=false",
      "-rewrite-sso-to-https=true",
      "-cache",
      "[CACHE]/git",
      "-shared"
    ],
    "infra_step": true,
    "name": "jiri init"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "import",
      "-v",
      "-time",
      "-name",
      "zircon",
      "-revision",
      "2d72510e447ab60a9728aeea2362d8be2cbd7789",
      "manifest",
      "https://fuchsia.googlesource.com/zircon"
    ],
    "infra_step": true,
    "name": "jiri import"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "update",
      "-v",
      "-time",
      "-autoupdate=false",
      "-attempts=3",
      "-run-hooks=false"
    ],
    "infra_step": true,
    "name": "jiri update"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "run-hooks",
      "-v",
      "-time",
      "-attempts=3"
    ],
    "infra_step": true,
    "name": "jiri run-hooks"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "source-manifest",
      "-v",
      "-time",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "jiri source-manifest",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output[source manifest]@{@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@  \"directories\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@    \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@      \"git_checkout\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@        \"repo_url\": \"https://fuchsia.googlesource.com/manifest\", @@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@        \"revision\": \"4c2b0da3c06341db5cebe4d02c78c93c3b2bd78b\"@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@      }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@    }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@  }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@}@@@",
      "@@@STEP_LOG_END@json.output[source manifest]@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[CLEANUP]/zircon_tmp"
    ],
    "infra_step": true,
    "name": "makedirs tmp"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "mkdir /tmp/infra-test-output\nruntests -o /tmp/infra-test-output ",
      "[CLEANUP]/zircon_tmp/runcmds"
    ],
    "infra_step": true,
    "name": "write runcmds",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@runcmds.sh@mkdir /tmp/infra-test-output@@@",
      "@@@STEP_LOG_LINE@runcmds.sh@runtests -o /tmp/infra-test-output @@@",
      "@@@STEP_LOG_END@runcmds.sh@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "#!/boot/bin/sh\nblktest -d /dev/sys/pci/00:17.0/ahci/sata2/block\nTEST_EXIT_CODE=\"$?\"\nif [ \"$TEST_EXIT_CODE\" -ne 0 ]; then\n  echo \"lsblk output:\"\n  lsblk\n  exit \"$TEST_EXIT_CODE\"\nfi",
      "[CLEANUP]/zircon_tmp/blktest.sh"
    ],
    "infra_step": true,
    "name": "write blktest_sh",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@blktest.sh@#!/boot/bin/sh@@@",
      "@@@STEP_LOG_LINE@blktest.sh@blktest -d /dev/sys/pci/00:17.0/ahci/sata2/block@@@",
      "@@@STEP_LOG_LINE@blktest.sh@TEST_EXIT_CODE=\"$?\"@@@",
      "@@@STEP_LOG_LINE@blktest.sh@if [ \"$TEST_EXIT_CODE\" -ne 0 ]; then@@@",
      "@@@STEP_LOG_LINE@blktest.sh@  echo \"lsblk output:\"@@@",
      "@@@STEP_LOG_LINE@blktest.sh@  lsblk@@@",
      "@@@STEP_LOG_LINE@blktest.sh@  exit \"$TEST_EXIT_CODE\"@@@",
      "@@@STEP_LOG_LINE@blktest.sh@fi@@@",
      "@@@STEP_LOG_END@blktest.sh@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "#!/boot/bin/sh\n/boot/test/fs/fs-test -f minfs -d /dev/sys/pci/00:17.0/ahci/sata2/block\nTEST_EXIT_CODE=\"$?\"\nif [ \"$TEST_EXIT_CODE\" -ne 0 ]; then\n  echo \"lsblk output:\"\n  lsblk\n  exit \"$TEST_EXIT_CODE\"\nfi",
      "[CLEANUP]/zircon_tmp/fs-test-minfs.sh"
    ],
    "infra_step": true,
    "name": "write fs-test-minfs_sh",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@fs-test-minfs.sh@#!/boot/bin/sh@@@",
      "@@@STEP_LOG_LINE@fs-test-minfs.sh@/boot/test/fs/fs-test -f minfs -d /dev/sys/pci/00:17.0/ahci/sata2/block@@@",
      "@@@STEP_LOG_LINE@fs-test-minfs.sh@TEST_EXIT_CODE=\"$?\"@@@",
      "@@@STEP_LOG_LINE@fs-test-minfs.sh@if [ \"$TEST_EXIT_CODE\" -ne 0 ]; then@@@",
      "@@@STEP_LOG_LINE@fs-test-minfs.sh@  echo \"lsblk output:\"@@@",
      "@@@STEP_LOG_LINE@fs-test-minfs.sh@  lsblk@@@",
      "@@@STEP_LOG_LINE@fs-test-minfs.sh@  exit \"$TEST_EXIT_CODE\"@@@",
      "@@@STEP_LOG_LINE@fs-test-minfs.sh@fi@@@",
      "@@@STEP_LOG_END@fs-test-minfs.sh@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "#!/boot/bin/sh\niochk -c 16384 --live-dangerously /dev/sys/pci/00:17.0/ahci/sata2/block\nTEST_EXIT_CODE=\"$?\"\nif [ \"$TEST_EXIT_CODE\" -ne 0 ]; then\n  echo \"lsblk output:\"\n  lsblk\n  exit \"$TEST_EXIT_CODE\"\nfi",
      "[CLEANUP]/zircon_tmp/iochk.sh"
    ],
    "infra_step": true,
    "name": "write iochk_sh",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@iochk.sh@#!/boot/bin/sh@@@",
      "@@@STEP_LOG_LINE@iochk.sh@iochk -c 16384 --live-dangerously /dev/sys/pci/00:17.0/ahci/sata2/block@@@",
      "@@@STEP_LOG_LINE@iochk.sh@TEST_EXIT_CODE=\"$?\"@@@",
      "@@@STEP_LOG_LINE@iochk.sh@if [ \"$TEST_EXIT_CODE\" -ne 0 ]; then@@@",
      "@@@STEP_LOG_LINE@iochk.sh@  echo \"lsblk output:\"@@@",
      "@@@STEP_LOG_LINE@iochk.sh@  lsblk@@@",
      "@@@STEP_LOG_LINE@iochk.sh@  exit \"$TEST_EXIT_CODE\"@@@",
      "@@@STEP_LOG_LINE@iochk.sh@fi@@@",
      "@@@STEP_LOG_END@iochk.sh@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build"
  },
  {
    "cmd": [],
    "name": "build.pre_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CACHE]/goma/client/goma_ctl.py",
      "restart"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache"
    },
    "infra_step": true,
    "name": "build.pre_goma.start_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "make",
      "x64",
      "GOMACC=[CACHE]/goma/client/gomacc",
      "-j",
      "20",
      "HOST_USE_ASAN=true",
      "BUILDROOT=[START_DIR]/zircon",
      "EXTRA_USER_MANIFEST_LINES=infra/runcmds=[CLEANUP]/zircon_tmp/runcmds test/fs/blktest.sh=[CLEANUP]/zircon_tmp/blktest.sh test/fs/fs-test-minfs.sh=[CLEANUP]/zircon_tmp/fs-test-minfs.sh test/fs/iochk.sh=[CLEANUP]/zircon_tmp/iochk.sh"
    ],
    "cwd": "[START_DIR]/zircon",
    "name": "build.build",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build.post_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CACHE]/goma/client/goma_ctl.py",
      "jsonstatus",
      "[CACHE]/goma/client/jsonstatus"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache"
    },
    "name": "build.post_goma.goma_jsonstatus",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"notice\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"infra_status\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"num_user_error\": 0, @@@",
      "@@@STEP_LOG_LINE@json.output@        \"ping_status_code\": 200@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CACHE]/goma/client/goma_ctl.py",
      "stat"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache"
    },
    "name": "build.post_goma.goma_stat",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[CACHE]/goma/client/goma_ctl.py",
      "stop"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache"
    },
    "name": "build.post_goma.stop_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_qemu"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/qemu",
      "-ensure-file",
      "fuchsia/qemu/linux-amd64 latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_qemu.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/qemu/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_swarming"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/luci/swarming",
      "-ensure-file",
      "infra/tools/luci/swarming/linux-amd64 latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_swarming.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/luci/swarming/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_isolated"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/luci/isolate",
      "-ensure-file",
      "infra/tools/luci/isolated/linux-amd64 latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_isolated.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/luci/isolated/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/luci/isolate/isolated",
      "archive",
      "-isolate-server",
      "https://isolateserver.appspot.com",
      "-namespace",
      "default-gzip",
      "-dump-hash",
      "/path/to/tmp/",
      "-files",
      "[START_DIR]/zircon/build-x64:zircon.zbi"
    ],
    "name": "archive"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/luci/swarming/swarming",
      "trigger",
      "-isolate-server",
      "https://isolateserver.appspot.com",
      "-server",
      "https://chromium-swarm.appspot.com",
      "-task-name",
      "booted tests",
      "-namespace",
      "default-gzip",
      "-dump-json",
      "/path/to/tmp/json",
      "-isolated",
      "[dummy hash]",
      "-dimension",
      "device_type=Intel NUC Kit NUC6i3SYK",
      "-dimension",
      "pool=fuchsia.tests",
      "-io-timeout",
      "60",
      "-hard-timeout",
      "2400",
      "-cipd-package",
      "botanist:fuchsia/infra/botanist/linux-amd64=latest",
      "-output",
      "out.tar",
      "-raw-cmd",
      "--",
      "./botanist/botanist",
      "zedboot",
      "-kernel",
      "zircon.zbi",
      "-results-dir",
      "/tmp/infra-test-output",
      "-out",
      "out.tar",
      "zircon.autorun.boot=/boot/bin/sh+/boot/infra/runcmds"
    ],
    "infra_step": true,
    "name": "trigger booted tests",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"tasks\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"request\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"expiration_secs\": \"3600\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"name\": \"booted tests\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"priority\": \"100\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@          \"cipd_input\": {@@@",
      "@@@STEP_LOG_LINE@json.output@            \"packages\": []@@@",
      "@@@STEP_LOG_LINE@json.output@          }, @@@",
      "@@@STEP_LOG_LINE@json.output@          \"command\": \"qemu\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"dimensions\": [], @@@",
      "@@@STEP_LOG_LINE@json.output@          \"execution_timeout_secs\": \"3600\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"grace_period_secs\": \"30\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"io_timeout_secs\": \"1200\"@@@",
      "@@@STEP_LOG_LINE@json.output@        }, @@@",
      "@@@STEP_LOG_LINE@json.output@        \"user\": \"luci\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"task_id\": \"11\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/luci/swarming/swarming",
      "collect",
      "-server",
      "https://chromium-swarm.appspot.com",
      "-task-summary-json",
      "/path/to/tmp/json",
      "-task-output-stdout",
      "json",
      "-output-dir",
      "[TMP_BASE]/swarming_tmp_1",
      "-requests-json",
      "{\"tasks\": [{\"request\": {\"expiration_secs\": \"3600\", \"name\": \"booted tests\", \"priority\": \"100\", \"properties\": {\"cipd_input\": {\"packages\": []}, \"command\": \"qemu\", \"dimensions\": [], \"execution_timeout_secs\": \"3600\", \"grace_period_secs\": \"30\", \"io_timeout_secs\": \"1200\"}, \"user\": \"luci\"}, \"task_id\": \"11\"}]}"
    ],
    "infra_step": true,
    "name": "collect",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"39927049b6ee7010\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"output\": \"hello world!\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"outputs\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      \"out.tar\"@@@",
      "@@@STEP_LOG_LINE@json.output@    ], @@@",
      "@@@STEP_LOG_LINE@json.output@    \"results\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"bot_id\": \"fuchsia-test-vm\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"bot_version\": \"f5f38a01bce09e3491fbd51c5974a03707915d0d7ebd5f9ee0186051895c47f2\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"completed_ts\": \"2017-11-01T22:06:11.538070\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"created_ts\": \"2017-11-01T22:06:08.298510\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"duration\": 0.06629300117492676, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"exit_code\": \"2\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"modified_ts\": \"2017-11-01T22:06:11.538070\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"name\": \"test\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"run_id\": \"39927049b6ee7011\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"started_ts\": \"2017-11-01T22:06:09.155530\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"state\": \"COMPLETED\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"tags\": [@@@",
      "@@@STEP_LOG_LINE@json.output@        \"os:Debian\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"pool:Fuchsia\"@@@",
      "@@@STEP_LOG_LINE@json.output@      ], @@@",
      "@@@STEP_LOG_LINE@json.output@      \"task_id\": \"39927049b6ee7010\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"try_number\": \"1\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"user\": \"luci\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@STEP_LOG_LINE@39927049b6ee7010.stdout@hello world!@@@",
      "@@@STEP_LOG_END@39927049b6ee7010.stdout@@@"
    ]
  },
  {
    "cmd": [],
    "name": "task results",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@kernel log@hello world!@@@",
      "@@@STEP_LOG_END@kernel log@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/zircon/scripts/symbolize",
      "--no-echo",
      "--build-dir",
      "[START_DIR]/zircon/build-x64"
    ],
    "name": "task results.symbolize",
    "stdin": "hello world!",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/zircon/prebuilt/downloads/symbolize",
      "-ids",
      "[START_DIR]/zircon/build-x64/ids.txt",
      "-llvm-symbolizer",
      "[START_DIR]/zircon/prebuilt/downloads/clang/bin/llvm-symbolizer",
      "-json-output",
      "[CLEANUP]/symbolize-dump.json"
    ],
    "name": "task results.symbolize logs",
    "stdin": "hello world!",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@symbolized logs@blah@@@",
      "@@@STEP_LOG_LINE@symbolized logs@blah@@@",
      "@@@STEP_LOG_END@symbolized logs@@@"
    ]
  },
  {
    "cmd": [
      "cat",
      "[CLEANUP]/symbolize-dump.json"
    ],
    "name": "task results.print file",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "infra_step": true,
    "name": "ensure bsdtar"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd",
      "-ensure-file",
      "fuchsia/tools/bsdtar/linux-amd64 latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure bsdtar.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/bsdtar/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/bsdtar",
      "--extract",
      "--verbose",
      "-f",
      "[TMP_BASE]/swarming_tmp_1/39927049b6ee7010/out.tar",
      "-C",
      "[START_DIR]/test_results/target"
    ],
    "infra_step": true,
    "name": "extract results"
  },
  {
    "cmd": [],
    "name": "booted test results"
  },
  {
    "name": "$result",
    "reason": "Test summary JSON not found, see kernel log for details",
    "recipe_result": null,
    "status_code": 1
  }
]