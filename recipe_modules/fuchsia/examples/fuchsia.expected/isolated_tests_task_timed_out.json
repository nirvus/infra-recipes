[
  {
    "cmd": [],
    "name": "ensure_jiri"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/jiri",
      "-ensure-file",
      "fuchsia/tools/jiri/linux-amd64 stable",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_jiri.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-stable----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/jiri/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "init",
      "-v",
      "-time",
      "-analytics-opt=false",
      "-rewrite-sso-to-https=true",
      "-cache",
      "[CACHE]/git",
      "-shared"
    ],
    "name": "jiri init"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "import",
      "-v",
      "-time",
      "fuchsia",
      "https://fuchsia.googlesource.com/manifest"
    ],
    "name": "jiri import"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "update",
      "-v",
      "-time",
      "-autoupdate=false",
      "-run-hooks=false"
    ],
    "name": "jiri update"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "run-hooks",
      "-v",
      "-time"
    ],
    "name": "jiri run-hooks"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "source-manifest",
      "-v",
      "-time",
      "/path/to/tmp/json"
    ],
    "name": "jiri source-manifest",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output[source manifest]@{@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@  \"directories\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@    \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@      \"git_checkout\": {@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@        \"repo_url\": \"https://fuchsia.googlesource.com/manifest\", @@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@        \"revision\": \"4c2b0da3c06341db5cebe4d02c78c93c3b2bd78b\"@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@      }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@    }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@  }@@@",
      "@@@STEP_LOG_LINE@json.output[source manifest]@}@@@",
      "@@@STEP_LOG_END@json.output[source manifest]@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_gsutil"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/gsutil",
      "-ensure-file",
      "infra/tools/gsutil latest",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_gsutil.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/gsutil\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "snapshot",
      "-v",
      "-time",
      "[TMP_BASE]/jiri.snapshot"
    ],
    "name": "jiri snapshot"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[infra::hash]/resources/hashutil.py",
      "-a",
      "sha1",
      "[TMP_BASE]/jiri.snapshot"
    ],
    "infra_step": true,
    "name": "hash snapshot",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "vpython",
      "-vpython-spec",
      "RECIPE_MODULE[infra::gsutil]/resources/gsutil.vpython",
      "-u",
      "[START_DIR]/cipd/gsutil/gsutil",
      "-o",
      "GSUtil:software_update_check_period=0",
      "cp",
      "[TMP_BASE]/jiri.snapshot",
      "gs://fuchsia-snapshots/8ac5404b688b34f2d34d1c8a648413aca30b7a97"
    ],
    "infra_step": true,
    "name": "upload jiri.snapshot",
    "~followup_annotations": [
      "@@@STEP_LINK@jiri.snapshot@https://storage.googleapis.com/fuchsia-snapshots/8ac5404b688b34f2d34d1c8a648413aca30b7a97@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "#!/boot/bin/sh\nmsleep 5000\nmkdir /test\nmount /dev/sys/pci/00:06.0/ahci/sata0/block /test\nruntests -o /test \ndm poweroff",
      "[TMP_BASE]/runcmds"
    ],
    "infra_step": true,
    "name": "write runcmds",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@runcmds@#!/boot/bin/sh@@@",
      "@@@STEP_LOG_LINE@runcmds@msleep 5000@@@",
      "@@@STEP_LOG_LINE@runcmds@mkdir /test@@@",
      "@@@STEP_LOG_LINE@runcmds@mount /dev/sys/pci/00:06.0/ahci/sata0/block /test@@@",
      "@@@STEP_LOG_LINE@runcmds@runtests -o /test @@@",
      "@@@STEP_LOG_LINE@runcmds@dm poweroff@@@",
      "@@@STEP_LOG_END@runcmds@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "\n{\n    \"resources\": [\n        {\n            \"bootfs_path\": \"data/infra/runcmds\",\n            \"file\": \"[TMP_BASE]/runcmds\"\n        }\n    ]\n}\n",
      "[TMP_BASE]/runcmds_package"
    ],
    "infra_step": true,
    "name": "write runcmds package",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@runcmds_package@@@@",
      "@@@STEP_LOG_LINE@runcmds_package@{@@@",
      "@@@STEP_LOG_LINE@runcmds_package@    \"resources\": [@@@",
      "@@@STEP_LOG_LINE@runcmds_package@        {@@@",
      "@@@STEP_LOG_LINE@runcmds_package@            \"bootfs_path\": \"data/infra/runcmds\",@@@",
      "@@@STEP_LOG_LINE@runcmds_package@            \"file\": \"[TMP_BASE]/runcmds\"@@@",
      "@@@STEP_LOG_LINE@runcmds_package@        }@@@",
      "@@@STEP_LOG_LINE@runcmds_package@    ]@@@",
      "@@@STEP_LOG_LINE@runcmds_package@}@@@",
      "@@@STEP_LOG_END@runcmds_package@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build"
  },
  {
    "cmd": [
      "[START_DIR]/scripts/build-zircon.sh",
      "-c",
      "-H",
      "-p",
      "x86"
    ],
    "name": "build.zircon",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build.ensure_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/goma",
      "-ensure-file",
      "infra_internal/goma/client/linux-amd64 release",
      "-json-output",
      "/path/to/tmp/json",
      "-service-account-json",
      "/creds/service_accounts/service-account-goma-client.json"
    ],
    "infra_step": true,
    "name": "build.ensure_goma.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-release---------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra_internal/goma/client/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "build.build fuchsia",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "restart"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "infra_step": true,
    "name": "build.build fuchsia.start_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/build/gn/gen.py",
      "--target_cpu=x86-64",
      "--packages=topaz/packages/default,build/packages/bootfs,[TMP_BASE]/runcmds_package",
      "--platforms=x86",
      "--goma=[START_DIR]/cipd/goma"
    ],
    "name": "build.build fuchsia.gen",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport multiprocessing\nimport sys\n\njob_limit = 200\nif sys.platform.startswith('linux'):\n  # Use 80 for linux not to load goma backend.\n  job_limit = 80\n\ntry:\n  jobs = min(job_limit, multiprocessing.cpu_count() * 10)\nexcept NotImplementedError:\n  jobs = 50\n\nprint jobs\n"
    ],
    "name": "build.build fuchsia.calculate the number of recommended jobs",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import multiprocessing@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@job_limit = 200@@@",
      "@@@STEP_LOG_LINE@python.inline@if sys.platform.startswith('linux'):@@@",
      "@@@STEP_LOG_LINE@python.inline@  # Use 80 for linux not to load goma backend.@@@",
      "@@@STEP_LOG_LINE@python.inline@  job_limit = 80@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@try:@@@",
      "@@@STEP_LOG_LINE@python.inline@  jobs = min(job_limit, multiprocessing.cpu_count() * 10)@@@",
      "@@@STEP_LOG_LINE@python.inline@except NotImplementedError:@@@",
      "@@@STEP_LOG_LINE@python.inline@  jobs = 50@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@print jobs@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/buildtools/ninja",
      "-C",
      "[START_DIR]/out/debug-x86-64",
      "-j",
      "50"
    ],
    "name": "build.build fuchsia.ninja",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "jsonstatus",
      "[START_DIR]/cipd/goma/jsonstatus"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.build fuchsia.goma_jsonstatus",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stat"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.build fuchsia.goma_stat",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[START_DIR]/cipd/goma/goma_ctl.py",
      "stop"
    ],
    "env": {
      "GOMA_CACHE_DIR": "[CACHE]/goma",
      "GOMA_DEPS_CACHE_FILE": "goma_deps_cache",
      "GOMA_SERVICE_ACCOUNT_JSON_FILE": "/creds/service_accounts/service-account-goma-client.json"
    },
    "name": "build.build fuchsia.stop_goma",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_isolated"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/luci/isolate",
      "-ensure-file",
      "infra/tools/luci/isolated/linux-amd64 latest",
      "-json-output",
      "/path/to/tmp/json",
      "-service-account-json",
      "/creds/service_accounts/service-account-goma-client.json"
    ],
    "infra_step": true,
    "name": "ensure_isolated.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/luci/isolated/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/out/build-zircon/tools/minfs",
      "[START_DIR]/test.fs@32M",
      "create"
    ],
    "name": "create test image"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/luci/isolate/isolated",
      "archive",
      "-isolate-server",
      "https://isolateserver.appspot.com",
      "-namespace",
      "default-gzip",
      "-dump-hash",
      "/path/to/tmp/",
      "-files",
      "[START_DIR]/out/debug-x86-64:user.bootfs",
      "-files",
      "[START_DIR]/out/build-zircon/build-x86:zircon.bin",
      "-files",
      "[START_DIR]:test.fs"
    ],
    "name": "archive"
  },
  {
    "cmd": [],
    "name": "ensure_swarming"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[START_DIR]/cipd/luci/swarming",
      "-ensure-file",
      "infra/tools/luci/swarming/linux-amd64 latest",
      "-json-output",
      "/path/to/tmp/json",
      "-service-account-json",
      "/creds/service_accounts/service-account-goma-client.json"
    ],
    "infra_step": true,
    "name": "ensure_swarming.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/luci/swarming/linux-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/luci/swarming/swarming",
      "trigger",
      "-isolate-server",
      "https://isolateserver.appspot.com",
      "-server",
      "https://chromium-swarm.appspot.com",
      "-task-name",
      "all tests",
      "-namespace",
      "default-gzip",
      "-dump-json",
      "[TMP_BASE]/qemu_test_results.json",
      "-isolated",
      "[dummy hash]",
      "-dimension",
      "cpu=x86-64",
      "-dimension",
      "kvm=1",
      "-dimension",
      "os=Debian",
      "-dimension",
      "pool=fuchsia.tests",
      "-io-timeout",
      "60",
      "-cipd-package",
      "qemu:fuchsia/qemu/linux-amd64=latest",
      "-output",
      "test.fs",
      "-raw-cmd",
      "--",
      "./qemu/bin/qemu-system-x86_64",
      "-m",
      "4096",
      "-smp",
      "4",
      "-nographic",
      "-machine",
      "q35",
      "-kernel",
      "zircon.bin",
      "-serial",
      "stdio",
      "-monitor",
      "none",
      "-initrd",
      "user.bootfs",
      "-enable-kvm",
      "-cpu",
      "host",
      "-append",
      "zircon.autorun.system=/system/data/infra/runcmds kernel.halt-on-panic=true",
      "-drive",
      "file=test.fs,format=raw,if=none,id=mydisk",
      "-device",
      "ahci,id=ahci,addr=06.0",
      "-device",
      "ide-drive,drive=mydisk,bus=ahci.0"
    ],
    "infra_step": true,
    "name": "trigger all tests",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"Request\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"expiration_secs\": \"3600\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"name\": \"all tests\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"priority\": \"100\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"cipd_input\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"packages\": [@@@",
      "@@@STEP_LOG_LINE@json.output@          {@@@",
      "@@@STEP_LOG_LINE@json.output@            \"package_name\": \"fuchsia/qemu/linux-amd64\", @@@",
      "@@@STEP_LOG_LINE@json.output@            \"path\": \"qemu\", @@@",
      "@@@STEP_LOG_LINE@json.output@            \"version\": \"latest\"@@@",
      "@@@STEP_LOG_LINE@json.output@          }@@@",
      "@@@STEP_LOG_LINE@json.output@        ]@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"command\": [@@@",
      "@@@STEP_LOG_LINE@json.output@        \"./qemu/bin/qemu-system-x86_64\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-m\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"4096\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-smp\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"4\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-nographic\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-machine\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"q35\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-kernel\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"zircon.bin\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-serial\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"stdio\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-monitor\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"none\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-initrd\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"user.bootfs\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-enable-kvm\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-cpu\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"host\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-append\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"zircon.autorun.system=/system/data/infra/runcmds kernel.halt-on-panic=true\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-drive\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"file=test.fs,format=raw,if=none,id=mydisk\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-device\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"ahci,id=ahci,addr=06.0\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"-device\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"ide-drive,drive=mydisk,bus=ahci.0\"@@@",
      "@@@STEP_LOG_LINE@json.output@      ], @@@",
      "@@@STEP_LOG_LINE@json.output@      \"dimensions\": [@@@",
      "@@@STEP_LOG_LINE@json.output@        {@@@",
      "@@@STEP_LOG_LINE@json.output@          \"key\": \"cpu\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"value\": \"x86-64\"@@@",
      "@@@STEP_LOG_LINE@json.output@        }, @@@",
      "@@@STEP_LOG_LINE@json.output@        {@@@",
      "@@@STEP_LOG_LINE@json.output@          \"key\": \"kvm\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"value\": \"1\"@@@",
      "@@@STEP_LOG_LINE@json.output@        }, @@@",
      "@@@STEP_LOG_LINE@json.output@        {@@@",
      "@@@STEP_LOG_LINE@json.output@          \"key\": \"os\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"value\": \"Debian\"@@@",
      "@@@STEP_LOG_LINE@json.output@        }, @@@",
      "@@@STEP_LOG_LINE@json.output@        {@@@",
      "@@@STEP_LOG_LINE@json.output@          \"key\": \"pool\", @@@",
      "@@@STEP_LOG_LINE@json.output@          \"value\": \"fuchsia.tests\"@@@",
      "@@@STEP_LOG_LINE@json.output@        }@@@",
      "@@@STEP_LOG_LINE@json.output@      ], @@@",
      "@@@STEP_LOG_LINE@json.output@      \"execution_timeout_secs\": \"3600\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"grace_period_secs\": \"30\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"io_timeout_secs\": \"1200\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"user\": \"luci\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"TaskID\": \"397418be219814a0\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"ViewURL\": \"https://chromium-swarm.appspot.com/user/task/39c188c09955c210\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/luci/swarming/swarming",
      "collect",
      "-server",
      "https://chromium-swarm.appspot.com",
      "-task-summary-json",
      "/path/to/tmp/json",
      "-task-output-stdout",
      "json",
      "-timeout",
      "20m",
      "-output-dir",
      "[TMP_BASE]/swarming_tmp_1",
      "-requests-json",
      "{\"Request\": {\"expiration_secs\": \"3600\", \"name\": \"all tests\", \"priority\": \"100\", \"properties\": {\"cipd_input\": {\"packages\": [{\"package_name\": \"fuchsia/qemu/linux-amd64\", \"path\": \"qemu\", \"version\": \"latest\"}]}, \"command\": [\"./qemu/bin/qemu-system-x86_64\", \"-m\", \"4096\", \"-smp\", \"4\", \"-nographic\", \"-machine\", \"q35\", \"-kernel\", \"zircon.bin\", \"-serial\", \"stdio\", \"-monitor\", \"none\", \"-initrd\", \"user.bootfs\", \"-enable-kvm\", \"-cpu\", \"host\", \"-append\", \"zircon.autorun.system=/system/data/infra/runcmds kernel.halt-on-panic=true\", \"-drive\", \"file=test.fs,format=raw,if=none,id=mydisk\", \"-device\", \"ahci,id=ahci,addr=06.0\", \"-device\", \"ide-drive,drive=mydisk,bus=ahci.0\"], \"dimensions\": [{\"key\": \"cpu\", \"value\": \"x86-64\"}, {\"key\": \"kvm\", \"value\": \"1\"}, {\"key\": \"os\", \"value\": \"Debian\"}, {\"key\": \"pool\", \"value\": \"fuchsia.tests\"}], \"execution_timeout_secs\": \"3600\", \"grace_period_secs\": \"30\", \"io_timeout_secs\": \"1200\"}, \"user\": \"luci\"}, \"TaskID\": \"397418be219814a0\", \"ViewURL\": \"https://chromium-swarm.appspot.com/user/task/39c188c09955c210\"}"
    ],
    "infra_step": true,
    "name": "collect",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"39927049b6ae70130\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"output\": \"hello world!\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"outputs\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      \"test.fs\"@@@",
      "@@@STEP_LOG_LINE@json.output@    ], @@@",
      "@@@STEP_LOG_LINE@json.output@    \"results\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"bot_id\": \"fuchsia-test-vm\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"bot_version\": \"f5f38a01bce09e3491fbd51c5974a03707915d0d7ebd5f9ee0186051895c47f2\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"completed_ts\": \"2017-12-01T22:06:11.538070\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"created_ts\": \"2017-12-01T22:06:08.298510\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"duration\": 0.06629300117492676, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"exit_code\": \"2\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"failure\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"modified_ts\": \"2017-12-01T22:06:11.538070\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"name\": \"test\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"run_id\": \"39927049b6ae7011\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"started_ts\": \"2017-11-01T22:06:09.155530\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"state\": \"TIMED_OUT\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"tags\": [@@@",
      "@@@STEP_LOG_LINE@json.output@        \"os:Debian\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"pool:Fuchsia\"@@@",
      "@@@STEP_LOG_LINE@json.output@      ], @@@",
      "@@@STEP_LOG_LINE@json.output@      \"task_id\": \"39927049b6ae7013\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"try_number\": \"1\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"user\": \"luci\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@STEP_LOG_LINE@39927049b6ae70130.stdout@hello world!@@@",
      "@@@STEP_LOG_END@39927049b6ae70130.stdout@@@"
    ]
  },
  {
    "cmd": [],
    "name": "task results",
    "~followup_annotations": [
      "@@@STEP_TEXT@i/o timeout@@@",
      "@@@STEP_LOG_LINE@output@hello world!@@@",
      "@@@STEP_LOG_END@output@@@",
      "@@@STEP_FAILURE@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/zircon/scripts/symbolize",
      "--no-echo",
      "--build-dir",
      "[START_DIR]/out/build-zircon/build-x86"
    ],
    "name": "symbolize",
    "stdin": "hello world!",
    "stdout": "/path/to/tmp/"
  },
  {
    "name": "$result",
    "reason": "I/O timed out, no output for 60 seconds.\nLast 10 lines of kernel output:\nhello world!",
    "recipe_result": null,
    "status_code": 1
  }
]